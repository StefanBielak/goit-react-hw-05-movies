{"version":3,"file":"static/js/311.4eda09a3.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/cast/cast.module.css?44e2","components/cast/cast.jsx","webpack://goit-react-hw-05-movies/./src/components/moviedetails/moviedetails.module.css?9533","components/moviedetails/moviedetails.jsx","webpack://goit-react-hw-05-movies/./src/components/reviews/reviews.module.css?dfbc","components/reviews/reviews.jsx","components/services/movieapi.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castContainer\":\"cast_castContainer__x7ue-\",\"castList\":\"cast_castList__UX8mR\",\"castItem\":\"cast_castItem__pxq0l\",\"actorImage\":\"cast_actorImage__8b5b9\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport movieApi from '../services/movieapi';\nimport styles from './cast.module.css'; // Dodano import stylÃ³w\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const response = await movieApi.getMovieCredits(movieId);\n        setCast(response.cast);\n      } catch (error) {\n        console.error('Error fetching cast:', error);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <div className={styles.castContainer}>\n      <h2>Cast</h2>\n      <ul className={styles.castList}>\n        {cast.map((actor) => (\n          <li key={actor.id} className={styles.castItem}>\n            <img\n              src={`https://image.tmdb.org/t/p/w185${actor.profile_path}`}\n              alt={actor.name}\n              className={styles.actorImage}\n            />\n            <p>{actor.name}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"moviedetails_container__+PuMs\",\"movieDetails\":\"moviedetails_movieDetails__VGy6P\",\"moviePoster\":\"moviedetails_moviePoster__ih-iT\",\"movieInfo\":\"moviedetails_movieInfo__iWefs\",\"genres\":\"moviedetails_genres__YU65O\",\"navbar\":\"moviedetails_navbar__3nimg\",\"content\":\"moviedetails_content__kA95x\",\"additionalLinks\":\"moviedetails_additionalLinks__qN1Em\"};","import React, { useEffect, useState } from 'react';\nimport { useParams, Link, Routes, Route } from 'react-router-dom';\nimport movieApi from '../services/movieapi';\nimport styles from './moviedetails.module.css';\nimport Cast from '../cast/cast';\nimport Reviews from '../reviews/reviews';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await movieApi.getMovieDetails(movieId);\n        setMovieDetails(response);\n      } catch (error) {\n        console.error('BÅÄd podczas pobierania szczegÃ³ÅÃ³w filmu:', error);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return (\n    <div>\n      <div className={styles.navbar}>\n        <Link to=\"/\">Home</Link>\n      </div>\n      <div className={`${styles.container} ${styles.content}`}>\n        {movieDetails && (\n          <div className={styles.movieDetails}>\n            <div className={styles.moviePoster}>\n              <img\n                src={`https://image.tmdb.org/t/p/w780${movieDetails.poster_path}`}\n                alt={movieDetails.title}\n              />\n            </div>\n            <div className={styles.movieInfo}>\n              <h2>{movieDetails.title}</h2>\n              <p>({new Date(movieDetails.release_date).getFullYear()})</p>\n              <p>Ocena uÅ¼ytkownikÃ³w: {movieDetails.vote_average * 10}%</p>\n              <p>{movieDetails.overview}</p>\n              <div className={styles.genres}>\n                <strong>Genre:</strong>\n                {movieDetails.genres.map((genre) => (\n                  <span key={genre.id}>{genre.name}</span>\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className={styles.additionalLinks}>\n          <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n          <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n        </div>\n\n        <Routes>\n          <Route path=\"/movies/:movieId/cast\" element={<Cast movieId={movieId} />} />\n          <Route path=\"/movies/:movieId/reviews\" element={<Reviews movieId={movieId} />} />\n        </Routes>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;","// extracted by mini-css-extract-plugin\nexport default {\"reviewsList\":\"reviews_reviewsList__LkXr4\",\"reviewItem\":\"reviews_reviewItem__+kTjt\",\"author\":\"reviews_author__KE2jH\",\"content\":\"reviews_content__mUyX9\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport movieApi from '../services/movieapi';\nimport styles from './reviews.module.css'; // Dodano import stylÃ³w\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const response = await movieApi.getMovieReviews(movieId);\n        setReviews(response.results);\n      } catch (error) {\n        console.error('Error fetching reviews:', error);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      <ul className={styles.reviewsList}>\n        {reviews.map((review) => (\n          <li key={review.id} className={styles.reviewItem}>\n            <p className={styles.author}>{review.author}</p>\n            <p className={styles.content}>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;","const apiKey = 'fec326186e089e37ab730141e063b47b';\n\nconst movieApi = {\n  getTrendingMovies: async () => {\n    try {\n      const response = await fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      throw new Error('Error fetching trending movies:', error);\n    }\n  },\n  searchMovies: async (query) => {\n    try {\n      const response = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      throw new Error('Error searching movies:', error);\n    }\n  },\n  getMovieDetails: async (movieId) => {\n    try {\n      const response = await fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      throw new Error('Error fetching movie details:', error);\n    }\n  },\n  getMovieCredits: async (movieId) => {\n    try {\n      const response = await fetch(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      throw new Error('Error fetching cast:', error);\n    }\n  },\n  getMovieReviews: async (movieId) => {\n    try {\n      const response = await fetch(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      throw new Error('Error fetching reviews:', error);\n    }\n  },\n};\n\nexport default movieApi","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","movieApi","sent","t0","console","error","stop","apply","arguments","_jsxs","className","styles","children","_jsx","map","actor","src","concat","profile_path","alt","name","id","movieDetails","setMovieDetails","fetchMovieDetails","Link","to","poster_path","title","Date","release_date","getFullYear","vote_average","overview","genres","genre","Routes","Route","path","element","Cast","Reviews","reviews","setReviews","fetchReviews","results","review","author","content","apiKey","getTrendingMovies","_getTrendingMovies","data","fetch","json","abrupt","Error","searchMovies","_searchMovies","_callee2","query","_context2","_x","getMovieDetails","_getMovieDetails","_callee3","_context3","_x2","getMovieCredits","_getMovieCredits","_callee4","_context4","_x3","getMovieReviews","_getMovieReviews","_callee5","_context5","_x4","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","fn","self","this","args","err","undefined"],"sourceRoot":""}