{"version":3,"file":"static/js/664.d06adc80.chunk.js","mappings":"6LACA,QAAkC,gCAAlC,EAAoF,gCAApF,EAAkI,4BAAlI,EAA6K,6BAA7K,EAA0N,8BAA1N,EAAsQ,4BAAtQ,EAA+S,2BAA/S,EAAuV,2B,aCIvV,MA6CA,EA7CeA,KACb,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACxCC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,IAC7CG,GAAWC,EAAAA,EAAAA,MAgBjB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAuBC,SAAA,EACrCH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAuBC,SAAA,EACrCC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,MAAOb,EACPc,SAAWC,GAAMd,EAAec,EAAEC,OAAOH,OACzCI,YAAY,mBACZT,UAAWC,KAEbE,EAAAA,EAAAA,KAAA,UAAQO,QAxBOC,UACnB,IACE,MAAMC,QAAiBC,EAAAA,EAAAA,aAAsBrB,GAC7CI,EAAiBgB,EAASE,QAG5B,CAFE,MAAOC,GACPC,QAAQD,MAAM,0BAA2BA,EAC3C,GAkBmCf,UAAWC,EAAoBC,SAAC,eAIjEC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAqBC,SAClCP,EAAcsB,KAAKC,IAClBnB,EAAAA,EAAAA,MAAA,OAAoBC,UAAWC,EAAoBS,QAASA,KAAMS,OArBhDC,EAqBiEF,EAAMG,QAnB/FxB,EAAS,WAADyB,OAAYF,IAFIA,KAqB2E,EAAAlB,SAAA,EAC3FC,EAAAA,EAAAA,KAAA,OAAKoB,IAAG,kCAAAD,OAAoCJ,EAAMM,aAAeC,IAAKP,EAAMQ,MAAO1B,UAAWC,KAC9FE,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAkBC,SAAEgB,EAAMQ,UAFhCR,EAAMG,UAMhB,C,iCC9CV,MAAMM,EAAS,mCAkDf,EAhDiB,CACfC,kBAAmBjB,UACjB,IACE,MAAMC,QAAiBiB,MAAM,2DAADP,OAA4DK,IAExF,aADmBf,EAASkB,MAI9B,CAFE,MAAOf,GACP,MAAM,IAAIgB,MAAM,kCAAmChB,EACrD,GAEFiB,aAAcrB,UACZ,IACE,MAAMC,QAAiBiB,MAAM,qDAADP,OAAsDK,EAAM,WAAAL,OAAUW,IAElG,aADmBrB,EAASkB,MAI9B,CAFE,MAAOf,GACP,MAAM,IAAIgB,MAAM,0BAA2BhB,EAC7C,GAEFmB,gBAAiBvB,UACf,IACE,MAAMC,QAAiBiB,MAAM,sCAADP,OAAuCF,EAAO,aAAAE,OAAYK,IAEtF,aADmBf,EAASkB,MAI9B,CAFE,MAAOf,GACP,MAAM,IAAIgB,MAAM,gCAAiChB,EACnD,GAEFoB,gBAAiBxB,UACf,IACE,MAAMC,QAAiBiB,MAAM,sCAADP,OAAuCF,EAAO,qBAAAE,OAAoBK,IAE9F,aADmBf,EAASkB,MAI9B,CAFE,MAAOf,GACP,MAAM,IAAIgB,MAAM,uBAAwBhB,EAC1C,GAEFqB,gBAAiBzB,UACf,IACE,MAAMC,QAAiBiB,MAAM,sCAADP,OAAuCF,EAAO,qBAAAE,OAAoBK,IAE9F,aADmBf,EAASkB,MAI9B,CAFE,MAAOf,GACP,MAAM,IAAIgB,MAAM,0BAA2BhB,EAC7C,G","sources":["webpack://goit-react-hw-05-movies/./src/components/movies/movies.module.css?b4e4","components/movies/movies.jsx","components/services/movieapi.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviesContainer\":\"movies_moviesContainer__V5JRy\",\"searchContainer\":\"movies_searchContainer__DVMNr\",\"searchInput\":\"movies_searchInput__ob8X0\",\"searchButton\":\"movies_searchButton__JoLg0\",\"searchResults\":\"movies_searchResults__mi-U4\",\"movieResult\":\"movies_movieResult__oQqHj\",\"movieImage\":\"movies_movieImage__DdBrg\",\"movieTitle\":\"movies_movieTitle__frLtm\"};","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport movieApi from '../services/movieapi';\nimport styles from './movies.module.css'; // Załóż, że styles zawiera odpowiednie style CSS\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const navigate = useNavigate();\n\n  const handleSearch = async () => {\n    try {\n      const response = await movieApi.searchMovies(searchQuery);\n      setSearchResults(response.results);\n    } catch (error) {\n      console.error('Error searching movies:', error);\n    }\n  };\n\n  const handleMovieClick = (movieId) => {\n    // Przenoszenie użytkownika do strony szczegółów filmu po kliknięciu\n    navigate(`/movies/${movieId}`);\n  };\n\n  return (\n    <div className={styles.moviesContainer}>\n      <div className={styles.searchContainer}>\n        <input\n          type=\"text\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n          placeholder=\"Search movies...\"\n          className={styles.searchInput}\n        />\n        <button onClick={handleSearch} className={styles.searchButton}>\n          Search\n        </button>\n      </div>\n      <div className={styles.searchResults}>\n        {searchResults.map((movie) => (\n          <div key={movie.id} className={styles.movieResult} onClick={() => handleMovieClick(movie.id)}>\n            <img src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`} alt={movie.title} className={styles.movieImage} />\n            <p className={styles.movieTitle}>{movie.title}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Movies;","const apiKey = 'fec326186e089e37ab730141e063b47b';\n\nconst movieApi = {\n  getTrendingMovies: async () => {\n    try {\n      const response = await fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      throw new Error('Error fetching trending movies:', error);\n    }\n  },\n  searchMovies: async (query) => {\n    try {\n      const response = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      throw new Error('Error searching movies:', error);\n    }\n  },\n  getMovieDetails: async (movieId) => {\n    try {\n      const response = await fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      throw new Error('Error fetching movie details:', error);\n    }\n  },\n  getMovieCredits: async (movieId) => {\n    try {\n      const response = await fetch(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      throw new Error('Error fetching cast:', error);\n    }\n  },\n  getMovieReviews: async (movieId) => {\n    try {\n      const response = await fetch(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      throw new Error('Error fetching reviews:', error);\n    }\n  },\n};\n\nexport default movieApi"],"names":["Movies","searchQuery","setSearchQuery","useState","searchResults","setSearchResults","navigate","useNavigate","_jsxs","className","styles","children","_jsx","type","value","onChange","e","target","placeholder","onClick","async","response","movieApi","results","error","console","map","movie","handleMovieClick","movieId","id","concat","src","poster_path","alt","title","apiKey","getTrendingMovies","fetch","json","Error","searchMovies","query","getMovieDetails","getMovieCredits","getMovieReviews"],"sourceRoot":""}