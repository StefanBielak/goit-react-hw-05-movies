{"version":3,"file":"static/js/634.aaafcf22.chunk.js","mappings":"6LACA,QAAgC,4BAAhC,EAAuE,uBAAvE,EAAyG,uBAAzG,EAA6I,yB,aCI7I,MAoCA,EApCaA,KACX,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,OACbC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,IAejC,OAbAC,EAAAA,EAAAA,YAAU,KACUC,WAChB,IACE,MAAMC,QAAiBC,EAAAA,EAAAA,gBAAyBR,GAChDG,EAAQI,EAASL,KAGnB,CAFE,MAAOO,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,GAGFE,EAAW,GACV,CAACX,KAGFY,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAqBC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAgBC,SAC5Bb,EAAKe,KAAKC,IACTN,EAAAA,EAAAA,MAAA,MAAmBC,UAAWC,EAAgBC,SAAA,EAC5CC,EAAAA,EAAAA,KAAA,OACEG,IAAG,kCAAAC,OAAoCF,EAAMG,cAC7CC,IAAKJ,EAAMK,KACXV,UAAWC,KAEbE,EAAAA,EAAAA,KAAA,KAAAD,SAAIG,EAAMK,SANHL,EAAMM,UAUf,C,iCCrCV,MAAMC,EAAS,mCAkDf,EAhDiB,CACfC,kBAAmBpB,UACjB,IACE,MAAMC,QAAiBoB,MAAM,2DAADP,OAA4DK,IAExF,aADmBlB,EAASqB,MAI9B,CAFE,MAAOnB,GACP,MAAM,IAAIoB,MAAM,kCAAmCpB,EACrD,GAEFqB,aAAcxB,UACZ,IACE,MAAMC,QAAiBoB,MAAM,qDAADP,OAAsDK,EAAM,WAAAL,OAAUW,IAElG,aADmBxB,EAASqB,MAI9B,CAFE,MAAOnB,GACP,MAAM,IAAIoB,MAAM,0BAA2BpB,EAC7C,GAEFuB,gBAAiB1B,UACf,IACE,MAAMC,QAAiBoB,MAAM,sCAADP,OAAuCpB,EAAO,aAAAoB,OAAYK,IAEtF,aADmBlB,EAASqB,MAI9B,CAFE,MAAOnB,GACP,MAAM,IAAIoB,MAAM,gCAAiCpB,EACnD,GAEFwB,gBAAiB3B,UACf,IACE,MAAMC,QAAiBoB,MAAM,sCAADP,OAAuCpB,EAAO,qBAAAoB,OAAoBK,IAE9F,aADmBlB,EAASqB,MAI9B,CAFE,MAAOnB,GACP,MAAM,IAAIoB,MAAM,uBAAwBpB,EAC1C,GAEFyB,gBAAiB5B,UACf,IACE,MAAMC,QAAiBoB,MAAM,sCAADP,OAAuCpB,EAAO,qBAAAoB,OAAoBK,IAE9F,aADmBlB,EAASqB,MAI9B,CAFE,MAAOnB,GACP,MAAM,IAAIoB,MAAM,0BAA2BpB,EAC7C,G","sources":["webpack://goit-react-hw-05-movies/./src/components/cast/cast.module.css?44e2","components/cast/cast.jsx","components/services/movieapi.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castContainer\":\"cast_castContainer__x7ue-\",\"castList\":\"cast_castList__UX8mR\",\"castItem\":\"cast_castItem__pxq0l\",\"actorImage\":\"cast_actorImage__8b5b9\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport movieApi from '../services/movieapi';\nimport styles from './cast.module.css'; // Dodano import stylÃ³w\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const response = await movieApi.getMovieCredits(movieId);\n        setCast(response.cast);\n      } catch (error) {\n        console.error('Error fetching cast:', error);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <div className={styles.castContainer}>\n      <h2>Cast</h2>\n      <ul className={styles.castList}>\n        {cast.map((actor) => (\n          <li key={actor.id} className={styles.castItem}>\n            <img\n              src={`https://image.tmdb.org/t/p/w185${actor.profile_path}`}\n              alt={actor.name}\n              className={styles.actorImage}\n            />\n            <p>{actor.name}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;","const apiKey = 'fec326186e089e37ab730141e063b47b';\n\nconst movieApi = {\n  getTrendingMovies: async () => {\n    try {\n      const response = await fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      throw new Error('Error fetching trending movies:', error);\n    }\n  },\n  searchMovies: async (query) => {\n    try {\n      const response = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      throw new Error('Error searching movies:', error);\n    }\n  },\n  getMovieDetails: async (movieId) => {\n    try {\n      const response = await fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      throw new Error('Error fetching movie details:', error);\n    }\n  },\n  getMovieCredits: async (movieId) => {\n    try {\n      const response = await fetch(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      throw new Error('Error fetching cast:', error);\n    }\n  },\n  getMovieReviews: async (movieId) => {\n    try {\n      const response = await fetch(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      throw new Error('Error fetching reviews:', error);\n    }\n  },\n};\n\nexport default movieApi"],"names":["Cast","movieId","useParams","cast","setCast","useState","useEffect","async","response","movieApi","error","console","fetchCast","_jsxs","className","styles","children","_jsx","map","actor","src","concat","profile_path","alt","name","id","apiKey","getTrendingMovies","fetch","json","Error","searchMovies","query","getMovieDetails","getMovieCredits","getMovieReviews"],"sourceRoot":""}