{"version":3,"file":"static/js/471.f0cdbb6e.chunk.js","mappings":"6LACA,QAA8B,6BAA9B,EAAwE,4BAAxE,EAA6G,wBAA7G,EAA+I,yB,aCI/I,MAgCA,EAhCgBA,KACd,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,OACbC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,IAevC,OAbAC,EAAAA,EAAAA,YAAU,KACaC,WACnB,IACE,MAAMC,QAAiBC,EAAAA,EAAAA,gBAAyBR,GAChDG,EAAWI,EAASE,QAGtB,CAFE,MAAOC,GACPC,QAAQD,MAAM,0BAA2BA,EAC3C,GAGFE,EAAc,GACb,CAACZ,KAGFa,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACJC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAmBH,SAC/BZ,EAAQgB,KAAKC,IACZN,EAAAA,EAAAA,MAAA,MAAoBG,UAAWC,EAAkBH,SAAA,EAC/CC,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAcH,SAAEK,EAAOC,UACrCL,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAeH,SAAEK,EAAOE,YAF/BF,EAAOG,UAMhB,C,iCCjCV,MAAMC,EAAS,mCAkDf,EAhDiB,CACfC,kBAAmBlB,UACjB,IACE,MAAMC,QAAiBkB,MAAM,2DAADC,OAA4DH,IAExF,aADmBhB,EAASoB,MAI9B,CAFE,MAAOjB,GACP,MAAM,IAAIkB,MAAM,kCAAmClB,EACrD,GAEFmB,aAAcvB,UACZ,IACE,MAAMC,QAAiBkB,MAAM,qDAADC,OAAsDH,EAAM,WAAAG,OAAUI,IAElG,aADmBvB,EAASoB,MAI9B,CAFE,MAAOjB,GACP,MAAM,IAAIkB,MAAM,0BAA2BlB,EAC7C,GAEFqB,gBAAiBzB,UACf,IACE,MAAMC,QAAiBkB,MAAM,sCAADC,OAAuC1B,EAAO,aAAA0B,OAAYH,IAEtF,aADmBhB,EAASoB,MAI9B,CAFE,MAAOjB,GACP,MAAM,IAAIkB,MAAM,gCAAiClB,EACnD,GAEFsB,gBAAiB1B,UACf,IACE,MAAMC,QAAiBkB,MAAM,sCAADC,OAAuC1B,EAAO,qBAAA0B,OAAoBH,IAE9F,aADmBhB,EAASoB,MAI9B,CAFE,MAAOjB,GACP,MAAM,IAAIkB,MAAM,uBAAwBlB,EAC1C,GAEFuB,gBAAiB3B,UACf,IACE,MAAMC,QAAiBkB,MAAM,sCAADC,OAAuC1B,EAAO,qBAAA0B,OAAoBH,IAE9F,aADmBhB,EAASoB,MAI9B,CAFE,MAAOjB,GACP,MAAM,IAAIkB,MAAM,0BAA2BlB,EAC7C,G","sources":["webpack://goit-react-hw-05-movies/./src/components/reviews/reviews.module.css?dfbc","components/reviews/reviews.jsx","components/services/movieapi.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewsList\":\"reviews_reviewsList__LkXr4\",\"reviewItem\":\"reviews_reviewItem__+kTjt\",\"author\":\"reviews_author__KE2jH\",\"content\":\"reviews_content__mUyX9\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport movieApi from '../services/movieapi';\nimport styles from './reviews.module.css'; // Dodano import stylÃ³w\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const response = await movieApi.getMovieReviews(movieId);\n        setReviews(response.results);\n      } catch (error) {\n        console.error('Error fetching reviews:', error);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      <ul className={styles.reviewsList}>\n        {reviews.map((review) => (\n          <li key={review.id} className={styles.reviewItem}>\n            <p className={styles.author}>{review.author}</p>\n            <p className={styles.content}>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;","const apiKey = 'fec326186e089e37ab730141e063b47b';\n\nconst movieApi = {\n  getTrendingMovies: async () => {\n    try {\n      const response = await fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      throw new Error('Error fetching trending movies:', error);\n    }\n  },\n  searchMovies: async (query) => {\n    try {\n      const response = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      throw new Error('Error searching movies:', error);\n    }\n  },\n  getMovieDetails: async (movieId) => {\n    try {\n      const response = await fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      throw new Error('Error fetching movie details:', error);\n    }\n  },\n  getMovieCredits: async (movieId) => {\n    try {\n      const response = await fetch(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      throw new Error('Error fetching cast:', error);\n    }\n  },\n  getMovieReviews: async (movieId) => {\n    try {\n      const response = await fetch(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      throw new Error('Error fetching reviews:', error);\n    }\n  },\n};\n\nexport default movieApi"],"names":["Reviews","movieId","useParams","reviews","setReviews","useState","useEffect","async","response","movieApi","results","error","console","fetchReviews","_jsxs","children","_jsx","className","styles","map","review","author","content","id","apiKey","getTrendingMovies","fetch","concat","json","Error","searchMovies","query","getMovieDetails","getMovieCredits","getMovieReviews"],"sourceRoot":""}